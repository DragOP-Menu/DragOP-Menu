var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
var mods = new Array();
var lc = {en_US:1, de_DE:2};
var l = new Array();
l.push(new Array());//Codes
l.push(new Array());//English
l.push(new Array());//German
//Multi Language Support
function addCode(code){
	l[0].push(code);
}
function setLString(code, lang, value){
	var done = false;
	l[0].forEach(function(entry, index, array){
		if(entry.toLowerCase() == code.toLowerCase()){
			l[lang][index] = value;
			done = true;
		}
	});
	if(done)return;
	//l[0].push(code+"".toLowerCase());
	//setLString(code, lang, value);
}
//addCode(code);
addCode("hacks.gamemode");
addCode("gm.survival");
addCode("gm.creative");
//setLString(code, lc.en_US, value);
setLString("hacks.gamemode", lc.en_US, "Gamemode");
setLString("gm.survival", lc.en_US, "Survival");
setLString("gm.creative", lc.en_US, "Creative");
//German
setLString("hacks.gamemode", lc.de_DE, "Spielmodus");
setLString("gm.survival", lc.de_DE, "Ãœberleben");
setLString("gm.creative", lc.de_DE, "Kreativ");

function getL(){
	//Todo
	return l[1];
}
function getLString(code){
	var str = code;
	l[0].forEach(function(entry, index, array){
		
		if(entry.toLowerCase().indexOf(code.toLowerCase())>-1){
			try{
				str = getL()[index];
			}catch(e){
				try{
					str = l[1][index];
				}catch(e){
					ctoast(e);
				}


			}
		}
	});
	return str;
}
mods.push({
	name:"Gamemode",
	isStateMode:function(){return false;},
	extra:Level.getGameMode(),
	onEnable:function(btn){/*Not used*/},
	onDisable:function(btn){/*Not used*/},
	onClick:function(btn){if(this.extra==1) this.extra = 0; else this.extra = 1;},
	onRefresh:function(btn){btn.setText(getLString("hacks.gamemode")+": "+(this.extra==0?getLString("gm.survival"):getLString("gm.creative"))); Level.setGameMode(this.extra);}
});
mods.push({
	name:"Gamemode",
	isStateMode:function(){return false;},
	extra:Level.getGameMode(),
	onEnable:function(btn){/*Not used*/},
	onDisable:function(btn){/*Not used*/},
	onClick:function(btn){if(this.extra==1) this.extra = 0; else this.extra = 1;},
	onRefresh:function(btn){btn.setText(getLString("hacks.gamemode")+": "+(this.extra==0?getLString("gm.survival"):getLString("gm.creative"))); Level.setGameMode(this.extra);}
});
mods.push({
	name:"Gamemode",
	isStateMode:function(){return false;},
	extra:Level.getGameMode(),
	onEnable:function(btn){/*Not used*/},
	onDisable:function(btn){/*Not used*/},
	onClick:function(btn){if(this.extra==1) this.extra = 0; else this.extra = 1;},
	onRefresh:function(btn){btn.setText(getLString("hacks.gamemode")+": "+(this.extra==0?getLString("gm.survival"):getLString("gm.creative"))); Level.setGameMode(this.extra);}
});
mods.push({
	name:"Gamemode",
	isStateMode:function(){return false;},
	extra:Level.getGameMode(),
	onEnable:function(btn){/*Not used*/},
	onDisable:function(btn){/*Not used*/},
	onClick:function(btn){if(this.extra==1) this.extra = 0; else this.extra = 1;},
	onRefresh:function(btn){btn.setText(getLString("hacks.gamemode")+": "+(this.extra==0?getLString("gm.survival"):getLString("gm.creative"))); Level.setGameMode(this.extra);}
});
//Menu open Button
var menuBtn;
var moving = false;
var dx = 0;
var dy = 0;
var mPosX = ctx.getWindowManager().getDefaultDisplay().getWidth() / 16 * 5;
//Main Menu
var mwidth = ctx.getWindowManager().getDefaultDisplay().getWidth() / 100 * 70;
var menu;
var hackBtn = function(hack){
var btn = new android.widget.Button(ctx);

hack.onRefresh(btn);
btn.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						hack.onClick(btn);
						hack.onRefresh(btn);
					}
				}
));
//btn.setLayoutParams(new android.widget.TableLayout.LayoutParams(mwidth/2, android.widget.TableLayout.LayoutParams.WRAP_CONTENT, 1));
return btn;
};

function dip2px(dips){
    var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
    return Math.ceil(dips * ctx.getResources().getDisplayMetrics().density);
}
function generateMenu(){
	var lay = new android.widget.TableLayout(ctx);
	var currow;
	mods.forEach(function(entry, index, array){
		
		if(index % 2 == 1){
			currow.addView(new hackBtn(mods[index]));
			lay.addView(currow);
			currow = null;
			print("true "+index);
		}else{
			currow = new android.widget.TableRow(ctx);
			currow.addView(new hackBtn(mods[index]));
			print("false "+index);
		}
	});
	if(currow != null)lay.addView(currow);
	
	
	return lay;
}
function showMenu(){
	ctx.runOnUiThread(new java.lang.Runnable({
		run: function() {
			try {

				var sbar = new android.widget.LinearLayout(ctx);
				
				var bg = android.graphics.drawable.GradientDrawable();
				bg.setColor(android.graphics.Color.argb(100, 255, 255, 255));
				bg.setStroke(dip2px(2), android.graphics.Color.BLACK);
				bg.setCornerRadius(1);
				
				sbar.setBackgroundDrawable(bg);
				var search = new android.widget.EditText(ctx);
				search.setBackgroundColor(android.graphics.Color.TRANSPARENT);
				search.setHint("Search a mod");
				search.setGravity(android.view.Gravity.CENTER);
				sbar.addView(search, new android.widget.LinearLayout.LayoutParams(android.widget.LinearLayout.LayoutParams.MATCH_PARENT, android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT));
				sbar.setId(39472);
				var mlist = new android.widget.LinearLayout(ctx);
				//mlist.setGravity(android.view.Gravity.TOP);
				mlist.setId(20372);
				mlist.addView(generateMenu(mods));
				var lparam = new android.widget.RelativeLayout.LayoutParams(mwidth, android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT);
				
				//lparam.addRule(android.widget.RelativeLayout.BELOW, toplayout.getChildAt(0).getId());
				lparam.addRule(android.widget.RelativeLayout.ALIGN_PARENT_TOP);
				//lparam.addRule(android.widget.RelativeLayout.CENTER_HORIZONTAL);
				var toplayout = new android.widget.RelativeLayout(ctx);
				toplayout.addView(sbar, lparam);
				lparam = new android.widget.RelativeLayout.LayoutParams(mwidth, android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT);
				
				lparam.addRule(android.widget.RelativeLayout.BELOW, toplayout.getChildAt(0).getId());
				lparam.addRule(android.widget.RelativeLayout.ALIGN_PARENT_BOTTOM);
				//lparam.addRule(android.widget.RelativeLayout.CENTER_HORIZONTAL);
				mlist.setLayoutParams(lparam);
				toplayout.addView(mlist);
				//toplayout.setBackground(null);
				toplayout.setGravity(android.view.Gravity.CENTER);
				toplayout.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						menu.dismiss();
						showMenuBtn();
					}
				}
));
				menu = new android.widget.PopupWindow(toplayout,android.widget.RelativeLayout.LayoutParams.MATCH_PARENT, android.widget.RelativeLayout.LayoutParams.MATCH_PARENT, true);
				//menu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));
				//menu.setSoftInputMode(android.view.WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_VISIBLE);
				menu.showAtLocation(ctx.getWindow().getDecorView(), android.view.Gravity.CENTER, 0, 0/*ctx.getWindowManager().getDefaultDisplay().getHeight()*/);
				//search.requestFocus();
				//lol
			}catch(e){
				ctoast(e);
			}
		}}
	));
}
function showMenuBtn(){
	menuBtn = new android.widget.Button(ctx);
	ctx.runOnUiThread(new java.lang.Runnable({
		run: function() {
			try {

				/*if(ghost) {
					menuBtn.setText('');
					menuBtn.setBackgroundColor(android.graphics.Color.parseColor("#01ffff00"));
				} else {
					menuBtn.setText('D');
					menuBtn.setBackgroundDrawable(new android.graphics.drawable.BitmapDrawable(bg));
				}
				*/
				menuBtn.setText('D');
				//menuBtn.setBackgroundDrawable(new android.graphics.drawable.BitmapDrawable(bg));

				menuBtn.setOnClickListener(new android.view.View.OnClickListener({
					onClick: function(viewarg) {
						//mainMenu();
						//windowMenu();
						/*exit();*/
						showMenu();
						GUI.dismiss();
						GUI = null;
					}
				}));
				menuBtn.setOnTouchListener(new android.view.View.OnTouchListener() {
					onTouch: function(view, motionEvent) {
						try {
							if (!moving) return false;
							switch (motionEvent.getAction()) {
								case android.view.MotionEvent.ACTION_DOWN:
									dx = mPosX - motionEvent.getRawX();
									break;
								case android.view.MotionEvent.ACTION_MOVE:
									mPosX = (motionEvent.getRawX() + dx);
									GUI.update(mPosX, 0, -1, -1);
									break;
								case android.view.MotionEvent.ACTION_UP:
								case android.view.MotionEvent.ACTION_CANCEL:
									moving = false;
									break;
							}
						} catch (e) {
							ctoast("Error: " + e);
						}

						return true;
					}
				});
				menuBtn.setOnLongClickListener(new android.view.View.OnLongClickListener() {
					onLongClick: function(v, t) {
						ctx.getSystemService(android.content.Context.VIBRATOR_SERVICE)
							.vibrate(60);
						/*gad();
						configd1();
						advsetd();*/
						moving = true;
						return true;
					}
				});
				menuBtn.getBackground().setAlpha(200);

				GUI = new android.widget.PopupWindow(menuBtn, android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT, android.widget.RelativeLayout.LayoutParams.WRAP_CONTENT);
				GUI.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(android.graphics.Color.TRANSPARENT));
				GUI.showAtLocation(ctx.getWindow()
					.getDecorView(), android.view.Gravity.LEFT | android.view.Gravity.TOP, ctx.getWindowManager()
					.getDefaultDisplay()
					.getWidth() / 16 * 5, 0);
			} catch (err) {
				ctoast( err);
			}
		}
	}));
}
showMenuBtn();
function ctoast(text, prefix) {
	try {
		var ctx = com.mojang.minecraftpe.MainActivity.currentMainActivity.get();
		ctx.runOnUiThread(new java.lang.Runnable({
			run: function() {
				var thetoast = android.widget.Toast.makeText(com.mojang.minecraftpe.MainActivity.currentMainActivity.get(), text, android.widget.Toast.LENGTH_LONG);
				var layout = new android.widget.LinearLayout(ctx);
				var msg = new android.widget.TextView(ctx);
				if(prefix || prefix == null)text = "DragOP: "+text;
				msg.setText(text);
				msg.setGravity(android.view.Gravity.CENTER);
				msg.setTextSize(20);
                msg.setPadding(10,10,10,10);
                msg.setTextColor(android.graphics.Color.WHITE);
				layout.addView(msg);
				//layout.setBackground(new android.graphics.drawable.BitmapDrawable(bg));
				thetoast.setView(layout);
				thetoast.show();
			}
		}));
	} catch (e) {
		print(e);
	}
}
function rptask() {
    ctx.runOnUiThread(new java.lang.Runnable({
        run: function() {
            new android.os.Handler()
                .postDelayed(new java.lang.Runnable({
                    run: function() {
                        nx = getPlayerX();
                        ny = getPlayerY();
                        nz = getPlayerZ();
                        if((GUI == null || !GUI.isShowing()) && (menu == null || !menu.isShowing())){
                            net.zhuoweizhang.mcpelauncher.ScriptManager.isRemote = true; 
                            net.zhuoweizhang.mcpelauncher.ScriptManager.setLevelFakeCallback(true, false);
                            showMenuBtn();
                         }
                        //did you know thats its eval(java.lang.String) and not eval(null)?
                        rptask();
                    }
                }),15 );
        }
    }))
}

rptask();
